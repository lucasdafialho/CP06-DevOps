name: Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP: rg-biblioteca-557884
  LOCATION: brazilsouth
  APP_NAME: biblioteca-dotnet-app-rm557884
  APP_INSIGHTS: ai-biblioteca-557884
  DB_SERVER_NAME: biblioteca-dotnet-app-rm557884
  DB_NAME: BibliotecaDB
  DB_USER: bibliotecaadmin
  DB_PASS: SenhaForte557884!

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Create Infrastructure
        run: |
          az provider register --namespace Microsoft.Web
          az provider register --namespace Microsoft.Insights
          az provider register --namespace Microsoft.OperationalInsights
          az provider register --namespace Microsoft.ServiceLinker
          az provider register --namespace Microsoft.Sql
          
          az group create --name $RESOURCE_GROUP --location $LOCATION || true
          
          az monitor app-insights component create \
            --app $APP_INSIGHTS \
            --location $LOCATION \
            --resource-group $RESOURCE_GROUP \
            --application-type web || true
          
          az appservice plan create \
            --name $APP_NAME-plan \
            --resource-group $RESOURCE_GROUP \
            --location $LOCATION \
            --sku B1 \
            --is-linux || true
          
          az webapp create \
            --resource-group $RESOURCE_GROUP \
            --plan $APP_NAME-plan \
            --name $APP_NAME \
            --runtime "DOTNETCORE:8.0" || true
          
          az resource update \
            --resource-group $RESOURCE_GROUP \
            --namespace Microsoft.Web \
            --resource-type basicPublishingCredentialsPolicies \
            --name scm \
            --parent sites/$APP_NAME \
            --set properties.allow=true || true
          
          az sql server create \
            --resource-group $RESOURCE_GROUP \
            --name $DB_SERVER_NAME \
            --location $LOCATION \
            --admin-user $DB_USER \
            --admin-password $DB_PASS \
            --enable-public-network true || true
          
          az sql db create \
            --resource-group $RESOURCE_GROUP \
            --server $DB_SERVER_NAME \
            --name $DB_NAME \
            --service-objective Basic \
            --backup-storage-redundancy Local \
            --zone-redundant false || true
          
          az sql server firewall-rule create \
            --resource-group $RESOURCE_GROUP \
            --server $DB_SERVER_NAME \
            --name AllowAll \
            --start-ip-address 0.0.0.0 \
            --end-ip-address 255.255.255.255 || true
      
      - name: Configure Application Settings
        run: |
          CONNECTION_STRING=$(az monitor app-insights component show \
            --app $APP_INSIGHTS \
            --resource-group $RESOURCE_GROUP \
            --query connectionString \
            --output tsv)
          
          DB_CONNECTION_STRING="Server=tcp:$DB_SERVER_NAME.database.windows.net,1433;Initial Catalog=$DB_NAME;User ID=$DB_USER;Password=$DB_PASS;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
          
          az webapp config connection-string set \
            --resource-group $RESOURCE_GROUP \
            --name $APP_NAME \
            --settings DefaultConnection="$DB_CONNECTION_STRING" \
            --connection-string-type SQLAzure
          
          az webapp config appsettings set \
            --resource-group $RESOURCE_GROUP \
            --name $APP_NAME \
            --settings \
              APPLICATIONINSIGHTS_CONNECTION_STRING="$CONNECTION_STRING" \
              ApplicationInsightsAgent_EXTENSION_VERSION="~3" \
              XDT_MicrosoftApplicationInsights_Mode="Recommended" \
              XDT_MicrosoftApplicationInsights_PreemptSdk="1" \
              ASPNETCORE_ENVIRONMENT="Production"
          
          az monitor app-insights component connect-webapp \
            --app $APP_INSIGHTS \
            --web-app $APP_NAME \
            --resource-group $RESOURCE_GROUP || true
          
          az webapp log config \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --application-logging filesystem \
            --detailed-error-messages true \
            --failed-request-tracing true \
            --web-server-logging filesystem
      
      - name: Azure logout
        run: az logout
        if: always()
  
  build-and-deploy:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Build Application
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish --configuration Release --output ./publish
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: biblioteca-dotnet-app-rm557884
          package: ./publish
      
      - name: Restart Web App
        run: |
          az webapp restart --name $APP_NAME --resource-group $RESOURCE_GROUP
      
      - name: Display Information
        run: |
          echo "=============================================="
          echo "DEPLOY CONCLU√çDO COM SUCESSO!"
          echo "=============================================="
          echo "URL: https://$APP_NAME.azurewebsites.net"
          echo "SQL Server: $DB_SERVER_NAME.database.windows.net"
          echo "Database: $DB_NAME"
          echo "User: $DB_USER"
          echo "=============================================="
      
      - name: Azure logout
        run: az logout
        if: always()

